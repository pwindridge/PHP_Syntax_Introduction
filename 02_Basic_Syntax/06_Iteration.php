<?php/** * Demonstrates declaration and use of variables and constants. * * Output is wrapped in html using the template methods *html* * and *display_html()*. * * @author Philip Windridge <p.c.windridge@staffs.ac.uk> * * @see /shared/template.php Documentation of html(), and * display_html() *//** * Include template.php to provide HTML wrapping and output */include __DIR__ . '/../shared/template.php';$bodySections = array(    getHtmlSection(        'header',        getHtmlSection('h1', 'Iteration')    ),	getHtmlSection(	'p',	'For a full list of iteration statements see \'Control Structures\' at: ' .	htmlLink('http://php.net/manual/en/language.control-structures.php')));$forLoop = 'The ' . code('for') . 'loop is the most complex of the loops available in PHP.' .	' The syntax of the ' . code('for') . 'loop is:' .	codeBlock(		array(			code('for (expr1; expr2; expr3)'),			code('statement', 1)		)	) .	code('expr1') . ' executes once at the start of the loop. ' .	code('expr2') . ' is evaluated at the start of each iteration. If it evaluates to ' . code('true') .	' the loop continues. If it evaluates to ' . code('false') . ' the loop ends. ' .	code('expr3') . ' is executed at the end of every iteration. The following ' . code('for') . ' loop' .	' outputs the first 5 values in the 5x table:' .	codeBlock(		array(			code('for($i = 1; $i <= 5; $i++) {'),			code('echo $i * 5;', 1),			code('}')		)	) .	'This would output ' . code('510152025') . '.';//for($i = 1; $i <= 5; $i++) {//	echo $i * 5;//}$forEachLoop = 'The ' . code('foreach') . ' allows easy iteration over an array or over objects that' .	' implement the ' .	code('Iterator') . ' interface. There are two syntaxes for a ' . code('foreach') . ' loop.' .	' Iterate through the values of a collection:' .	codeBlock(		array(			code('foreach (array_expression as $value)'),			code('statement', 1)		)	) .	'Iterate through both the index key and the value of a collection:' .	codeBlock(		array(			code('foreach (array_expression as $key => $value)'),			code('statement', 1)		)	) .	'A simple example of the ' . code('foreach') . ' loop using the first syntax form:' .	codeBlock(		array(			code('foreach (array(\'cat\', \'dog\', \'budgie\') as $pet) {'),			code('echo $pet;', 1),			code('}')		)	) .	'This would output ' . code('catdogbudgie') . '.';//foreach(array('cat', 'dog', 'budgie') as $pet) {//	echo $pet;//}$forEachLoop2 = 'To extend this example to show the second syntax form:' .	codeBlock(		array(			code('foreach (array(\'cat\', \'dog\', \'budgie\') as $key => $pet) {'),			code('echo \'Pet \' . $key . \': \'$pet;', 1),			code('}')		)	) .	'This would output ' . code('Pet 0: catPet 1: dogPet 2: budgie') . '.';//foreach(array('cat', 'dog', 'budgie') as $key => $pet) {//	echo 'Pet '. $key . ': ' . $pet;//}$whileLoop = 'The ' . code('while') . ' loop is the simplest form of loop in PHP. The basic form is:' .	codeBlock(		array(			code('while (expr)'),			code('statement', 1)		)	) .	'The following example of the ' . code('while') . ' loop in use:' .	codeBlock(		array(			code('$i = 1;'),			code('while ($i <= 5) {'),			code('echo $i++ * 5;', 1),			code('}')		)	) .	'Would result in the output ' . code('510152025') . '.';//$i = 1;//while ($i <= 5) {//	echo $i++ * 5;//}$doWhileLoop = 'The ' . code('do-while') . ' loop is similar to the ' . code('while') . ' loop except that' .	' the condition for the next iteration occurs at the end of the iteration rather than at the beginning.' .	' This means that the ' . code('do-while') . ' loop code will execute at least once. The basic syntax is:' .	codeBlock(		array(			code('do {'),			code('statement', 1),			code('} while (expr)')		)	) .	'A practical example of the ' . code('do-while') . ' loop would be:' .	codeBlock(		array(			code('$i = 1;'),			code('do {'),			code('echo $i++ * 5;', 1),			code('} while ($i <= 5);')		)	) .	'This would result in the output ' . code('510152025') . '.';//$i = 1;//do {//	echo $i++ * 5;//} while ($i <= 5);$bodySections[] = getHtmlSection(    'dl',    getHtmlSection('dt', code('for') . ' Loop') .    getHtmlSection('dd', $forLoop) .    getHtmlSection('dt', code('foreach') . ' Loop') .    getHtmlSection('dd', $forEachLoop) .	getHtmlSection('dd', $forEachLoop2) .    getHtmlSection('dt', code('while') . ' Loop') .    getHtmlSection('dd', $whileLoop) .	getHtmlSection('dt', code('do-while') . ' Loop') .	getHtmlSection('dd', $doWhileLoop));displayHtml('Iteration', $bodySections);